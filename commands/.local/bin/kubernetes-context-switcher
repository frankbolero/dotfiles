#!/bin/bash

contexts=$(kubectl config get-contexts -o name)

# Check if a search term is provided
if [ -n "$1" ]; then
  search_term=$1
  if [[ "$search_term" == "unset" ]]; then
    kubectl config unset current-context
    echo "Current context unset."
    exit 0
  fi
  # Filter contexts based on the search term
  contexts=$(echo "$contexts" | grep -i "$search_term")

  # Check if any contexts match the search term
  if [ -z "$contexts" ]; then
    echo "No contexts found matching \"$search_term\""
    exit 1
  fi
fi

# Count the number of matching contexts
line_count=$(echo "$contexts" | wc -l | xargs)

unset="- Unset Context -"

if [ "$line_count" -eq 1 ]; then
  # If there's only one match, select it automatically
  selected=$contexts
else
  # Display the contexts using fzf
  context=$(printf "%s\n%s" "$unset" "$contexts")
  display_count=$((line_count + 5))
  selected=$(echo "$context" | fzf-tmux -p -h "$display_count" --info hidden --border-label=" Kubernetes Contexts ")
fi

if [ -n "$selected" ]; then
  context_name=$selected
  if [[ "$context_name" == "$unset" ]]; then
    kubectl config unset current-context
    # echo "Current context unset."
  else
    kubectl config use-context "$context_name"
    # echo "Switched to context \"$context_name\"."
  fi
else
  echo "No context selected"
fi
